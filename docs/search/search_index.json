{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Hello!","text":"<p>Welcome to my Earth Engine primer!</p> <p>These materials aim to help undergraduate students in Geography and Environmental Studies learn geospatial methods for investigating the global environment. While most of the lessons introduce methods and workflows in Google Earth Engine, I also show students around QGIS and how to move between the two platforms. The ultimate goal of the materials is to help students learn timeless concepts of geospatial analysis that transcend specific software platforms. That is the goal at least. </p> <p>I use the materials to teach undergraduates at Middlebury College (Vermont, USA) and revise the materials every fall semester while teaching. This means that I scrub the site in September and then publish revised materials each week through December.  </p> <p>Please contact me if you have any questions. </p> <p>Jeff Howarth Associate Professor of Geography Middlebury College, Middlebury, Vermont, USA jhowarth@middlebury.edu </p> <p>This work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.</p>"},{"location":"intro/gee_gui/","title":"GEE User Interface","text":""},{"location":"intro/gee_gui/#introduction","title":"Introduction","text":"<p>In this course, we will work with Google Earth Engine via the GEE Code Editor. The tutorial below provides an overview of the different components of the Code Editor\u2019s graphical user interface (GUI).   </p>"},{"location":"intro/gee_gui/#tutorial","title":"Tutorial","text":"<p>I split this tutorial into separate videos. If I show code in the video, you can find the snippets below each video.  </p> <p>To follow along with the videos, you will need to open the GEE Code Editor in a web browser. Please see the previous tutorial if you forget how to access the editor. </p>"},{"location":"intro/gee_gui/#explore-the-map-interface","title":"Explore the map interface.","text":""},{"location":"intro/gee_gui/#write-a-header","title":"Write a header.","text":"<pre><code>//  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//  Name:     gee_ui.js \n//  Author:   Jeff Howarth\n//  Date:     9/7/2023 \n//  Purpose:  Introduce Earth Engine Graphical User Interface (Code Editor)\n//  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  \n</code></pre>"},{"location":"intro/gee_gui/#center-map-and-set-zoom-level","title":"Center map and set zoom level.","text":"<pre><code>//  Center and set zoom level the map.\n\nMap.setCenter(\n-50,                  // Longitude\n40,                  // Latitude\n3                    // Zoom level\n)\n;\n</code></pre>"},{"location":"intro/gee_gui/#set-the-default-base-map","title":"Set the default base map.","text":"<pre><code>//  Set the default base map. \n\nMap.setOptions('SATELLITE');\n</code></pre>"},{"location":"intro/gee_gui/#load-lst-module","title":"Load LST module.","text":"<pre><code>//  Load module\n\nvar tool = require('users/jhowarth/eePrimer:modules/modis_lst_demo.js');\n\n// You can then call functions in the module as methods of this object.\n\ntool.makeMap();\n</code></pre>"},{"location":"intro/gee_gui/#inspect-data","title":"Inspect data.","text":"<pre><code>// Print info about map layers. \n\nprint(\"Layers on this map:\", Map.layers());\n</code></pre> <p>This work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.</p>"},{"location":"intro/js101/","title":"Javascript 101","text":""},{"location":"intro/js101/#introduction","title":"Introduction","text":"<p>To use GEE, you will need to write code.    </p> <p>In this course, we will use the GEE Code Editor, which means that we will be coding in JavaScript.    </p>"},{"location":"intro/js101/#tutorial","title":"Tutorial","text":"<p>I made the videos below to help walk you through through some basic JavaScript syntax, data types, and methods. I broke the tutorial into a set of short videos, rather than recording one long one. You should work through all the videos in the set.     </p> <p>To follow along, you will need to open the GEE Code Editor in a web browser.  </p> <p>I recommend that you use Google Chrome when working with the GEE Code Editor.     </p> <p>This is the web address to the Code Editor: </p> <p>https://code.earthengine.google.com/</p> <p>Honestly, you might as well bookmark that page and move the bookmark to the left corner of your toolbar. You will be visiting this site a lot over the semester.  </p> <p>Below the video, you should find snippets for the code shown in the video. If you hover your cursor over the upper-right corner of the snippet, you should see a little button that you can click to copy the code. You can then paste the code into the Code Editor while you watch the video. My intention is to save you some time and reduce errors that come from typos.  </p>"},{"location":"intro/js101/#quick-tour","title":"Quick tour","text":""},{"location":"intro/js101/#new-repo-save-file","title":"New Repo, Save File","text":""},{"location":"intro/js101/#data-types-1","title":"Data types (1)","text":""},{"location":"intro/js101/#line-comment","title":"Line Comment","text":"<pre><code>// This is a line comment. \n</code></pre>"},{"location":"intro/js101/#string","title":"String","text":"<pre><code>'Hello, world'  // Single quotes defines a string. \n</code></pre>"},{"location":"intro/js101/#variable","title":"Variable","text":"<pre><code>// Use var keyword to define a variable to store data. \n\nvar hello = 'Hello, world!' // This variable stores a string. \n</code></pre>"},{"location":"intro/js101/#semi-colon","title":"Semi-colon","text":"<pre><code>// End statements with semi-colons so that the editor does not complain.\n\nvar hello_again = 'Hola Mundo';\n</code></pre>"},{"location":"intro/js101/#double-quotes","title":"Double quotes","text":"<pre><code>// You can also define strings with double quotes. \n\nvar who_dat = \"Who's there?\";\n</code></pre>"},{"location":"intro/js101/#parentheses","title":"Parentheses","text":"<pre><code>// You can pass variables to functions within parentheses. \n\nprint(hello_again);\n</code></pre>"},{"location":"intro/js101/#comma","title":"Comma","text":"<pre><code>// You can pass more than one variable separated by commas.\n\nprint(hello_again, who_dat);\n</code></pre>"},{"location":"intro/js101/#data-types-2","title":"Data types (2)","text":""},{"location":"intro/js101/#number","title":"Number","text":"<pre><code>// This variable stores a number. \n\nvar year = 2023;\n</code></pre>"},{"location":"intro/js101/#list","title":"List","text":"<pre><code>// Square brackets defines a list. \n\nvar some_vt_towns = ['Middlebury', 'New Haven', 'Bristol'];\n</code></pre>"},{"location":"intro/js101/#index","title":"Index","text":"<pre><code>// Use square brackets after list object to call index of items in list.\n\nprint(some_vt_towns, some_vt_towns[0]);\n</code></pre>"},{"location":"intro/js101/#methods","title":"Methods","text":"<pre><code>// Use dot notation to call methods associated with the data type. \n\nprint(some_vt_towns.sort());\n</code></pre>"},{"location":"intro/js101/#data-types-3","title":"Data types (3)","text":""},{"location":"intro/js101/#dictionary","title":"Dictionary","text":"<pre><code>// Use curly brackets (or braces) to define dictionaries. \n\nvar midd = {\n\"name\": \"Middlebury\",  // Dictionaries are composed of key:value pairs.\n\"pop_2010\": 8496,\n\"pop_2020\": 9152\n};\n\nprint('Middlebury', midd);\n</code></pre>"},{"location":"intro/js101/#key-values","title":"Key values","text":"<pre><code>// Use dot notation to call the value of object key.  \n\nprint(midd.name);\n\nprint(\"Population change\", midd.pop_2020 - midd.pop_2010);\n</code></pre>"},{"location":"intro/js101/#data-types-4","title":"Data types (4)","text":""},{"location":"intro/js101/#functions","title":"Functions","text":"<pre><code>// Functions can be defined as a way to reuse code and make it easier to read.  \n\nvar i_love_function = function(some_string) {\nreturn 'I love ' + some_string + '!';\n};\n\nprint(i_love_function('maps'));\n</code></pre>"},{"location":"intro/js101/#modules","title":"Modules","text":"<pre><code>// Modules can be used to share functions across multiple scripts by:\n\n// 1. storing the module as a variable,\n\nvar tool = require('users/jhowarth/eePrimer:modules/tissot.js');\n\n// 2. calling functions in the module as methods of this variable.\n\ntool.drawTissot();\n</code></pre>"},{"location":"intro/js101/#mercator-distortion","title":"Mercator distortion","text":"<p>The True Size of</p> <p>This work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.</p>"},{"location":"toolbox/GEE/","title":"Google Earth Engine","text":""},{"location":"toolbox/GEE/#introduction","title":"Introduction","text":"<p>Google Earth Engine (GEE) is cloud-based geographic information system (GIS) that is (currently) free to use for educational and research purposes. We will be using GEE for most of the heavy lifting in this course: accessing large datasets, crunching them in computational workflows, and visualizing them with web maps. The lovely thing about GEE is that all of this work gets done on Google\u2019s servers in the cloud. All you will need to work with GEE is a web browser, preferably Google Chrome, and a decent internet connection. All you need to do is sign up for the Google Earth Engine cloud service. </p> <p>Please complete the steps below on the first day of class (or 24 hours before our first lab meeting). </p>"},{"location":"toolbox/GEE/#sign-up-for-earth-engine","title":"Sign up for Earth Engine","text":"<ol> <li> <p>Go to the bottom of the Google Earth Engine page and click \u2018Sign Up Now\u2019.</p> <p></p> </li> <li> <p>You want to sign up for a noncommercial cloud project. The next page will likely only show one option, so go ahead and click that.</p> <p></p> </li> <li> <p>As a student, you do not have to pay for your use of Earth Engine. So click \u2018Unpaid usage\u2019 and then select \u2018Academic and Research\u2019 from the pull-down options. Click \u2018Next\u2019 to move on.   </p> <p></p> </li> <li> <p>You should create a new Google Cloud Project. You can try doing this under the middlebury.edu organization. Your user name should be \u2018ee-your-midd-email-address-name\u2019 with no spaces. For example, \u2018ee-jhowarth\u2019. Then click \u2018Continue to Summary\u2019.    </p> <p></p> </li> <li> <p>Affirm the summary to finalize the project. </p> </li> <li> <p>It may take a little time for you to receive approval. When you are successful, you should be able to open the Code Editor and get to a page that looks similar to the one below. </p> <p></p> </li> </ol>"},{"location":"toolbox/QGIS/","title":"QGIS","text":""},{"location":"toolbox/QGIS/#introduction","title":"Introduction","text":"<p>QGIS is a free, open-source, and powerful geographic information system (GIS). We will be using QGIS for some light lifting in this course: mostly data visualization and layouts. Because QGIS is free and powerful, I would like you to know your way around it and be comfortable moving data from GEE to QGIS and vice versa. </p> <p>Unlike GEE, QGIS is a desktop GIS, which means in most cases the program needs to be installed on a local computer. All of the workstations in the Geography Department computer lab have QGIS installed, so you can use any of these computers to complete course work that requires QGIS. It will be far more convenient for you to keep up with the study materials in this course, however, if you install QGIS on your laptop. It\u2019s free and the software runs on both a Mac and Windows.  </p> <p>Please complete the steps below before our first lab meeting.</p>"},{"location":"toolbox/QGIS/#install-qgis-for-first-time","title":"Install QGIS for first time","text":"<ol> <li>Go to QGIS home page. </li> <li>Click \u2018Download Now\u2019. </li> <li>Choose your Operating System. This will start the download, which may take some time to finish.  </li> <li>Double-click the downloaded installer and follow the directions.  </li> </ol> <p>If on a Mac, after installation is complete: </p> <ol> <li>Navigate to application folder.</li> <li>Right-click on QGIS app.</li> <li>Select \u2018Open\u2019. </li> <li>You will see a warning that you have downloaded the app from the internet and questioning whether you trust the source. Affirm. </li> </ol> <p>After you have told your OS to trust the app, you can open the app through Spotlight in the future.  </p>"},{"location":"toolbox/QGIS/#on-updating-your-qgis-version","title":"On updating your QGIS version","text":"<p>If you have installed QGIS recently (2022-2023), you should be fine. </p> <p>We will be using GEE for most of the heavy lifting in this course and will largely use QGIS for some visualization and layout tasks. My QGIS demos will use 3.32.2-Lima (accessed 9.6.23), but it is ok if your version predates this a little. </p> <p>If you want to update your version, I tend to first remove the existing version and then install the new version. </p>"},{"location":"workflows/image_collections/","title":"Image collections","text":""},{"location":"workflows/image_collections/#introduction","title":"Introduction","text":"<p>This tutorial introduces a basic workflow for processing and visualizing image collections with Earth Engine. You will use a MODIS Land Surface Temperature product to make a map that shows the mean LST for January 2023 in degrees Celsius. By the end of the tutorial, you should have a map that looks like the image below. </p> <p></p>"},{"location":"workflows/image_collections/#start-a-new-script","title":"Start a new script","text":"<pre><code>//  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//  TITLE:      wk02_tutorial.js\n//  AUTHOR:     your name\n//  DATE:       today's date\n//  PURPOSE:    A basic workflow for processing image collections.     \n//  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ \n\n// Load check module. \n\nvar check = require('users/jhowarth/eePrimer:modules/checks.js');\n\n// ----------------------------------------------------------------\n//  Process the image collection.\n// ----------------------------------------------------------------\n</code></pre>"},{"location":"workflows/image_collections/#load-image-collection","title":"Load image collection","text":"<pre><code>// Step 1: Load image collection\n\nvar step_1 = ee.ImageCollection();\n</code></pre>"},{"location":"workflows/image_collections/#filter-by-date","title":"Filter by date","text":"<pre><code>// Step 2: Filter image collection by date.\n\nvar step_2 = step_1.filter(ee.Filter.date());\n</code></pre>"},{"location":"workflows/image_collections/#select-band","title":"Select band","text":"<pre><code>// Step 3: Select band.\n\nvar step_3 = step_2.select();\n</code></pre>"},{"location":"workflows/image_collections/#reduce-to-image","title":"Reduce to image","text":"<pre><code>// Step 4: Reduce image collection.\n\nvar step_4 = step_3;\n</code></pre>"},{"location":"workflows/image_collections/#scale-data-if-necessary","title":"Scale data (if necessary)","text":"<pre><code>// Step 5: Apply scalar (if EE data catalog tells you the data are scaled).\n\nvar step_5 = step_4;\n</code></pre>"},{"location":"workflows/image_collections/#convert-units-if-necessary","title":"Convert units (if necessary)","text":"<pre><code>// Step 6: Convert units (if units need conversion).\n\nvar step_6 = step_5;\n</code></pre>"},{"location":"workflows/image_collections/#visualize-results-as-layer","title":"Visualize results as layer","text":"<pre><code>// ----------------------------------------------------------------\n//  Visualize results as layer.\n// ----------------------------------------------------------------\n\n//  Set base map.\n\n\n\n//  Load community palettes. \n\nvar palettes = require('users/gena/packages:palettes');\n\n// print('Community palettes', palettes);\n\n//  Define visualization parameters. \n\n// var viz = {\n//   bands: ,\n//   min: ,\n//   max: , \n//   palette: palettes.colorbrewer.RdBu[11]\n// };\n\n//  Display the data values with the visualization parameters.\n\n// Map.addLayer();\n</code></pre>"},{"location":"workflows/image_collections/#add-a-legend","title":"Add a legend","text":"<pre><code>// ---------------------------------------------------------------------\n//  Add a legend.\n// ---------------------------------------------------------------------\n\n//  Load cart module.\n\nvar cart = require('users/jhowarth/eePrimer:modules/cart.js');\n\n// Call makeGradientLegend function and pass three parameters.\n\nvar legend = cart                                           // module\n.makeGradientLegend(                                      // function\nviz,                                                    // viz parameters\n'degrees (C)',                                          // a label for legend\n'bottom-left'                                           // position on map\n)\n;\n\n// Add legend to map. \n\n// Map.add();\n</code></pre>"}]}